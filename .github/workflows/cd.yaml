name: Continuous Deployment

on:
  workflow_dispatch:
  push:
    branches:
      - saga
    paths-ignore:
      - Dockerfile
      - .github/workflows/test-docker.yaml
      - .github/workflows/publish-docker.yaml
      - .github/workflows/test-and-release.yaml

jobs:
  deploy:
    runs-on: ubuntu-latest

    environment:
      name: production
      url: ${{ steps.web-app-url.outputs.web_app_url }}

    env:
      AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
      APP_REG_CLIENT_ID: ${{ secrets.APP_REG_CLIENT_ID }}
      LOCATION: ${{ secrets.LOCATION }}
      APP_NAME: ${{ secrets.APP_NAME }}
      B2C_TENANT: ${{ secrets.B2C_TENANT }}
      RESOURCE_GROUP: ${{ secrets.RESOURCE_GROUP }}
      UNWIRED_LABS_API_KEY: ${{ secrets.UNWIRED_LABS_API_KEY }}

    outputs:
      web_app_url: ${{ steps.web-app-url.outputs.web_app_url }}

    steps:
      - uses: actions/checkout@v2
      - name: Determine Version
        if: env.AZURE_CREDENTIALS != ''
        run: |
          git fetch --depth=1 origin +refs/tags/*:refs/tags/*
          TAG=`git tag --contains ${{ github.sha }} | tr -d '\n'`
          VERSION=${TAG:-${{ github.sha }}}
          echo Version: ${VERSION}
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
      - name: Install Azure CLI
        if: env.AZURE_CREDENTIALS != ''
        run: curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
      - name: Install Azures Functions CLI
        if: env.AZURE_CREDENTIALS != ''
        run: |
          curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > microsoft.gpg
          sudo mv microsoft.gpg /etc/apt/trusted.gpg.d/microsoft.gpg
          sudo sh -c 'echo "deb [arch=amd64] https://packages.microsoft.com/repos/microsoft-ubuntu-$(lsb_release -cs)-prod $(lsb_release -cs) main" > /etc/apt/sources.list.d/dotnetdev.list'
          sudo apt-get update
          sudo apt-get install azure-functions-core-tools-3
      - name: Login to Azure
        if: env.AZURE_CREDENTIALS != ''
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: List Azure Accounts
        if: env.AZURE_CREDENTIALS != ''
        run: az account list --output table
      - uses: actions/setup-node@v2
        if: env.AZURE_CREDENTIALS != ''
        with:
          node-version: "16.x"
      - name: Keep npm cache around to speed up installs
        if: env.AZURE_CREDENTIALS != ''
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-build-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: env.AZURE_CREDENTIALS != ''
        run: npm ci --no-audit
      - name: Compile source
        if: env.AZURE_CREDENTIALS != ''
        run: npx tsc
      - name: Deploy solution
        if: env.AZURE_CREDENTIALS != ''
        run: |
          az deployment group create \
            --resource-group ${RESOURCE_GROUP:-nrfassettracker} \
            --mode Complete \
            --name cd-${{ env.VERSION }} \
            --template-file azuredeploy.json \
            --parameters \
              appName=${APP_NAME:-nrfassettracker} \
              appRegistrationClientId=$APP_REG_CLIENT_ID \
              b2cTenant=${B2C_TENANT}
      - name: Deploy Function App
        if: env.AZURE_CREDENTIALS != ''
        run: |
          node dist/pack/package-function-app.js functionapp.zip
          az functionapp deployment source config-zip -g ${RESOURCE_GROUP:-nrfassettracker} -n ${APP_NAME:-nrfassettracker}api --src functionapp.zip
      - name: Enable static site hosting for the app
        if: env.AZURE_CREDENTIALS != ''
        run:
          az storage blob service-properties update --auth-mode login
          --account-name ${APP_NAME:-nrfassettracker}app --static-website
          --404-document index.html --index-document index.html
      - name: Determine Web App settings
        if: env.AZURE_CREDENTIALS != ''
        run: node cli react-config >> $GITHUB_ENV
      - name: Determine public URL
        id: web-app-url
        run: |
          PUBLIC_URL=`az storage account show -g ${RESOURCE_GROUP:-nrfassettracker} -n ${APP_NAME:-nrfassettracker}app --query 'primaryEndpoints.web' --output tsv | tr -d '\n'`
          echo "::set-output name=web_app_url::${PUBLIC_URL}"
          echo "PUBLIC_URL=${PUBLIC_URL}" >> $GITHUB_ENV
      - name: Build app
        if: env.AZURE_CREDENTIALS != ''
        run: |
          export EXTEND_ESLINT=true
          WEBAPP_REPO=`cat package.json | jq -r '.deploy.webApp.repository'`
          WEBAPP_BRANCH=`cat package.json | jq -r '.deploy.webApp.branch'`
          git clone --branch $WEBAPP_BRANCH --single-branch $WEBAPP_REPO app
          cd app
          git fetch --tags
          export REACT_APP_VERSION=$(git describe --tags `git rev-list --tags --max-count=1`)
          git checkout $REACT_APP_VERSION
          npm ci --no-audit
          npm run build
      - name: Deploy Web App
        if: env.AZURE_CREDENTIALS != ''
        run: |
          export APP_STORAGE_CONNECTION_STRING=`az storage account show-connection-string --name ${APP_NAME:-nrfassettracker}app --query 'connectionString'` 
          az storage blob upload-batch --connection-string ${APP_STORAGE_CONNECTION_STRING} --account-name ${APP_NAME:-nrfassettracker}app -s ./app/build -d '$web'
